{"version":3,"file":"index.es.js","sources":["../src/utils/logger/types.ts","../src/utils/logger/utils.ts","../src/utils/logger/makeMessageStyle.ts","../src/utils/logger/makeMethod.ts","../src/utils/logger/defaultLogger.ts","../src/utils/logger/index.ts","../src/utils/logger/mask.ts","../src/types.ts","../src/index.ts"],"sourcesContent":["export enum LogName {\n  Error = 'error',\n  Info = 'info',\n  Debug = 'debug',\n  None = 'none',\n  Warn = 'warn',\n}\n\nexport const LogLevelStyle = {\n  Log: 'background:#5ece7b; padding: 2px; border-radius: 0 2px 2px 0;  color: #fff;',\n  Info: 'background:#0468DB; padding: 2px; border-radius: 0 2px 2px 0;  color: #fff;',\n  Warn: 'background:#ecc713; padding: 2px; border-radius: 0 2px 2px 0;  color: #000;',\n  Error: 'background:#d12727; padding: 2px; border-radius: 0 2px 2px 0;  color: #fff'\n};\n","export type LogMessage = string[] | Error | Record<string, any> | string | boolean;\n\nexport const getMessage = (message: LogMessage): string | undefined => {\n  if (Array.isArray(message)) return message.join(' | ');\n  if (message instanceof Error) return message.message;\n  if (typeof message === 'object') return JSON.stringify(message, null, 1);\n\n  const returnMessage = message as string || '';\n\n  return `${returnMessage}`;\n};\n\nexport const detectNode: boolean = Object.prototype\n  .toString\n  .call(typeof process !== 'undefined'\n    ? process\n    : 0) === '[object process]' ||\n  process.env.APPLICATION_ENV === 'production';\n\nexport const mountLog = (\n  name: string,\n  style: string\n) => {\n  if (detectNode) {\n    return [`${name}: `];\n  }\n\n  return [\n    `%c${name}%c:`,\n    style,\n    'background: transparent;'\n  ];\n};\n","import { LogLevelStyle, LogName } from './types';\nimport { mountLog } from './utils';\n\nexport function makeMessageStyle(logEnum: LogName) {\n  switch (logEnum) {\n    case LogName.Error:\n      return mountLog(\n        '[VSF][error]',\n        LogLevelStyle.Error\n      );\n    case LogName.Info:\n      return mountLog(\n        '[VSF][info]',\n        LogLevelStyle.Info\n      );\n    case LogName.Warn:\n      return mountLog(\n        '[VSF][warn]',\n        LogLevelStyle.Warn\n      );\n    case LogName.Debug:\n      return mountLog(\n        '[VSF][debug]',\n        LogLevelStyle.Log\n      );\n    case LogName.None:\n    default:\n      return mountLog(\n        '[VSF]',\n        LogLevelStyle.Log\n      );\n  }\n}\n","import { LogName } from './types';\nimport { makeMessageStyle } from './makeMessageStyle';\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function makeMethod(logEnum: LogName, fn: Function) {\n  return () => {\n    return Function.prototype.bind.apply(fn, [\n      console,\n      ...makeMessageStyle(logEnum)\n    ]);\n  };\n}\n","/* istanbul ignore file */\n\nimport { makeMethod } from './makeMethod';\nimport { LogName } from './types';\n\nconst defaultLogger = {\n  debug: makeMethod(LogName.Debug, console.debug)(),\n  info: makeMethod(LogName.Info, console.info)(),\n  warn: makeMethod(LogName.Warn, console.warn)(),\n  error: makeMethod(LogName.Error, console.error)()\n};\n\nexport default defaultLogger;\n","import { VSFLogger } from '../../types';\nimport defaultLogger from './defaultLogger';\n\nconst defaultModes = {\n  // Test\n  test: 'none',\n\n  // Development\n  dev: 'warn',\n  development: 'warn',\n\n  // Production\n  prod: 'error',\n  production: 'error',\n\n  // Fallback\n  default: 'warn'\n};\n\nlet Logger: VSFLogger = defaultLogger;\n\ntype LoggerImplementation = VSFLogger | ((verbosity: string) => VSFLogger);\n\nconst registerLogger = (loggerImplementation: LoggerImplementation, verbosity: string) => {\n  if (typeof loggerImplementation === 'function') {\n    Logger = loggerImplementation(verbosity);\n    return;\n  }\n\n  switch (verbosity) {\n    case 'info':\n      Logger = {\n        ...defaultLogger,\n        ...loggerImplementation,\n        debug: () => {}\n      };\n      break;\n    case 'warn':\n      Logger = {\n        ...defaultLogger,\n        ...loggerImplementation,\n        info: () => {},\n        debug: () => {}\n      };\n      break;\n    case 'error':\n      Logger = {\n        ...defaultLogger,\n        ...loggerImplementation,\n        info: () => {},\n        warn: () => {},\n        debug: () => {}\n      };\n      break;\n    case 'none':\n      Logger = {\n        debug: () => {},\n        info: () => {},\n        warn: () => {},\n        error: () => {}\n      };\n      break;\n    default:\n      Logger = {\n        ...defaultLogger,\n        ...loggerImplementation\n      };\n  }\n};\n\nregisterLogger(defaultLogger, defaultModes[process.env.NODE_ENV] || defaultModes.default);\n\nexport {\n  Logger,\n  registerLogger\n};\n","const maskString = (el: string) => `${el.charAt(0)}***${el.slice(-1)}`;\n\nconst maskAny = (el: any) => {\n  if (typeof el === 'string') {\n    return maskString(el);\n  }\n\n  return '***';\n};\n\nconst mask = (el: any): any => {\n  if (typeof el === 'object' && !Array.isArray(el)) {\n    return Object.keys(el).reduce((prev, key) => ({\n      ...prev,\n      [key]: maskAny(el[key])\n    }), {});\n  }\n\n  return maskAny(el);\n};\n\nexport default mask;\n","/* istanbul ignore file */\n\nimport type { Request, Response, Express } from 'express';\nimport type { HelmetOptions } from 'helmet';\n\n/**\n * Default name of the cookie storing active localization code\n */\nexport const VSF_LOCALE_COOKIE = 'vsf-locale';\n\n/**\n * Default name of the cookie storing active currency code\n */\nexport const VSF_CURRENCY_COOKIE = 'vsf-currency';\n\n/**\n * Default name of the cookie storing active country code\n */\nexport const VSF_COUNTRY_COOKIE = 'vsf-country';\n\n/**\n * Default name of the cookie storing active store code\n */\nexport const VSF_STORE_COOKIE = 'vsf-store';\n\n/**\n * Default name of the cookie storing active channel code\n */\nexport const VSF_CHANNEL_COOKIE = 'vsf-channel';\n\nexport type CustomQuery = Record<string, string>\n\nexport type ComposableFunctionArgs <T> = T & { customQuery?: CustomQuery }\n\nexport interface ProductsSearchParams {\n  perPage?: number;\n  page?: number;\n  sort?: any;\n  term?: any;\n  filters?: any;\n  [x: string]: any;\n}\nexport interface UseProductErrors {\n  search: Error;\n}\n\nexport interface UseSearchErrors {\n  search: Error;\n}\n\nexport interface IntegrationContext<CLIENT = any, CONFIG = any, API = any> {\n  client: CLIENT;\n  config: CONFIG;\n  api: API;\n  [x: string]: any;\n}\n\nexport interface Context<CLIENT = any, CONFIG = any, API = any> {\n  [x: string]: IntegrationContext<CLIENT, CONFIG, API> | any;\n}\n\nexport type PlatformApi = {\n  [functionName: string]: (context: Context, ...args: any[]) => Promise<any>\n}\n\nexport type ContextedPlatformApi<T extends PlatformApi> = {\n  [P in keyof T]: T[P] extends (context: Context, ...arg: infer X) => Promise<any>\n    ? (...arg: X) => Promise<any>\n    : never\n}\n\nexport interface AgnosticFacetSearchParams {\n  categorySlug?: string;\n  rootCatSlug?: string;\n  term?: string;\n  page?: number;\n  itemsPerPage?: number;\n  sort?: string;\n  filters?: Record<string, string[]>;\n  metadata?: any;\n  [x: string]: any;\n}\n\nexport interface FacetSearchResult<S> {\n  data: S;\n  input: AgnosticFacetSearchParams;\n}\n\nexport interface UseContentErrors {\n  search: Error;\n}\n\nexport interface AgnosticPrice {\n  regular: number | null;\n  special?: number | null;\n}\n\nexport interface AgnosticMediaGalleryItem {\n  small: string;\n  normal: string;\n  big: string;\n}\n\nexport interface AgnosticAttribute {\n  name?: string;\n  value: string | Record<string, any>;\n  label: string;\n}\n\nexport interface AgnosticBreadcrumb {\n  text: string;\n  link: string;\n}\n\nexport interface AgnosticTotals {\n  total: number;\n  subtotal: number;\n  special?: number;\n  [x: string]: unknown;\n}\n\nexport interface AgnosticCoupon {\n  id: string;\n  name: string;\n  code: string;\n  value: number;\n}\n\nexport interface AgnosticDiscount {\n  id: string;\n  name: string;\n  description: string;\n  value: number;\n  code?: string;\n}\n\nexport interface AgnosticCategoryTree {\n  label: string;\n  slug?: string;\n  items: AgnosticCategoryTree[];\n  isCurrent: boolean;\n  count?: number;\n  [x: string]: unknown;\n}\n\nexport interface AgnosticFilter {\n  id: string;\n  label: string;\n  values: {\n    id: string;\n    isSlected?: boolean;\n    count?: number;\n    label: string;\n    value: string;\n  }[]\n}\n\nexport interface AgnosticProductReview {\n  id: string;\n  author: string;\n  date: Date;\n  message: string | null;\n  rating: number | null;\n}\n\nexport interface AgnosticLocale {\n  code: string;\n  label: string;\n  [x: string]: unknown;\n}\n\nexport interface AgnosticCountry {\n  code: string;\n  label: string;\n  [x: string]: unknown;\n}\n\nexport interface AgnosticCurrency {\n  code: string;\n  label: string;\n  prefixSign: boolean;\n  sign: string;\n  [x: string]: unknown;\n}\n\nexport interface AgnosticSortByOption {\n  label: string;\n  value: string;\n  [x: string]: unknown;\n}\n\nexport interface AgnosticRateCount {\n  rate: number;\n  count: number;\n}\n\n// TODO - remove this interface\nexport enum AgnosticOrderStatus {\n  Open = 'Open',\n  Pending = 'Pending',\n  Confirmed = 'Confirmed',\n  Shipped = 'Shipped',\n  Complete = 'Complete',\n  Cancelled = 'Cancelled',\n  Refunded = 'Refunded'\n}\n\nexport interface AgnosticFacet {\n  type: string;\n  id: string;\n  value: any;\n  attrName?: string;\n  count?: number;\n  selected?: boolean;\n  metadata?: any;\n}\n\nexport interface AgnosticGroupedFacet {\n  id: string;\n  label: string;\n  count?: number;\n  options: AgnosticFacet[];\n}\n\nexport interface AgnosticSort {\n  options: AgnosticFacet[];\n  selected: string;\n}\n\nexport interface AgnosticPagination {\n  currentPage: number;\n  totalPages: number;\n  totalItems: number;\n  itemsPerPage: number;\n  pageOptions: number[];\n}\n\nexport interface AgnosticAddress {\n  addressLine1: string;\n  addressLine2: string;\n  [x: string]: unknown;\n}\n\nexport interface AgnosticGeoLocation {\n  type: string;\n  coordinates?: unknown;\n  [x: string]: unknown;\n}\n\nexport interface AgnosticStore {\n  name: string;\n  id: string;\n  description?: string;\n  locales?: AgnosticLocale[];\n  currencies?: AgnosticCurrency[]\n  address?: AgnosticAddress;\n  geoLocation?: AgnosticGeoLocation;\n  [x: string]: unknown;\n}\n\nexport interface VSFLogger {\n  debug(message?: any, ...args: any): void;\n  info(message?: any, ...args: any): void;\n  warn(message?: any, ...args: any): void;\n  error(message?: any, ...args: any): void;\n}\n\nexport interface FactoryParams<API extends PlatformApi = any> {\n  provide?: (context: Context) => any;\n  api?: Partial<API>;\n}\n\nexport interface HookParams<C> {\n  configuration: C;\n}\n\nexport interface CallHookParams<C> extends HookParams<C> {\n  callName: string;\n}\n\nexport type BeforeCallArgs = any;\nexport type AfterCallArgs = any;\n\nexport interface BeforeCallParams< C> extends CallHookParams<C> {\n  args: BeforeCallArgs;\n}\n\nexport interface AfterCallParams<C> extends CallHookParams<C> {\n  response: AfterCallArgs;\n}\n\nexport interface ApiClientExtensionHooks<C = any> {\n  beforeCreate?: (params: HookParams<C>) => C;\n  afterCreate?: (params: HookParams<C>) => C;\n  beforeCall?: (params: BeforeCallParams<C>) => BeforeCallArgs;\n  afterCall?: (params: AfterCallParams<C>) => AfterCallArgs;\n}\n\nexport type CustomQueryFn<T = any> = ({ query, variables, metadata }: { query: any, variables: T, metadata: any }) => {\n  query?: any;\n  variables?: T;\n  metadata: any;\n};\n\nexport type ApiClientMethod = (...args: any) => Promise<any>\n\nexport interface ApiClientExtension {\n  name: string;\n  extendApiMethods?: Record<string, ApiClientMethod>;\n  extendApp?: ({ app, configuration }: {app: Express, configuration: any}) => void;\n  hooks?: (req: Request, res: Response) => ApiClientExtensionHooks;\n}\n\nexport interface Integration {\n  location: string;\n  configuration: any;\n  extensions?: (extensions: ApiClientExtension[]) => ApiClientExtension[];\n  customQueries?: Record<string, CustomQueryFn>;\n}\n\nexport type IntegrationsSection = Record<string, Integration>\n\nexport interface MiddlewareConfig {\n  integrations: Record<string, Integration>;\n  helmet?: boolean | Readonly<HelmetOptions>;\n}\n\nexport interface ApiClientFactoryParams<T, F = any> {\n  api: F;\n  isProxy?: boolean;\n  onCreate: (config: T, headers?: Record<string, string>) => { config: T; client: any };\n  extensions?: ApiClientExtension[];\n}\n\nexport interface ApiInstance {\n  api: any;\n  client: any;\n  settings: any;\n}\n\nexport type CreateApiProxyFn = (givenConfig: any, customApi?: any) => ApiInstance;\nexport type CreateApiClientFn = (givenConfig: any, customApi?: any) => ApiInstance;\n\nexport interface ApiClientFactory {\n  createApiClient: CreateApiClientFn;\n\n  /**\n   * Sets up integration config, runs once.\n   */\n  init?: (configuration: Record<string, any>) => Record<string, any>;\n}\n\nexport interface ApiClientConfig {\n  [x: string]: any;\n  client?: any;\n  extensions?: ApiClientExtension[];\n}\n\nexport type ApiClientMethods<T> = {\n  [K in keyof T]:\n    T[K] extends (...args: any) => any ?\n    (...args: [...Parameters<T[K]>, CustomQuery?]) => ReturnType<T[K]> :\n    T[K]\n}\n","/**\n * Core Vue Storefront 2 library.\n *\n * @remarks\n * The `@vue-storefront/core` library is a core of the whole Vue Storefront 2 application.\n * It defines common interfaces for all eCommerce integrations, factories for creating\n * composables, logger, SSR helpers and more.\n *\n * @packageDocumentation\n */\n\n/* istanbul ignore file */\nexport * from './utils';\nexport * from './types';\n\ndeclare global {\n  interface Window { $vuestorefront: any }\n}\n\nif (typeof window !== 'undefined') {\n  window.$vuestorefront = window.$vuestorefront || { integrations: [] };\n}\n\nexport function track(id: string): void {\n  if (typeof window !== 'undefined') {\n    if (window.$vuestorefront) {\n      window.$vuestorefront.integrations.push(id);\n    }\n  }\n}\n"],"names":[],"mappings":"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"}